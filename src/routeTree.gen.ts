/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticationImport } from './routes/_authentication'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticationLogInImport } from './routes/_authentication/log-in'
import { Route as AuthenticationForgetPasswordImport } from './routes/_authentication/forget-password'
import { Route as AuthenticatedQuestionsImport } from './routes/_authenticated/questions'
import { Route as AuthenticatedDailyLessonsIndexImport } from './routes/_authenticated/daily-lessons/index'
import { Route as AuthenticatedDailyLessonsLessonIdImport } from './routes/_authenticated/daily-lessons/$lessonId'

// Create/Update Routes

const AuthenticationRoute = AuthenticationImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticationLogInRoute = AuthenticationLogInImport.update({
  path: '/log-in',
  getParentRoute: () => AuthenticationRoute,
} as any)

const AuthenticationForgetPasswordRoute =
  AuthenticationForgetPasswordImport.update({
    path: '/forget-password',
    getParentRoute: () => AuthenticationRoute,
  } as any)

const AuthenticatedQuestionsRoute = AuthenticatedQuestionsImport.update({
  path: '/questions',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDailyLessonsIndexRoute =
  AuthenticatedDailyLessonsIndexImport.update({
    path: '/daily-lessons/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDailyLessonsLessonIdRoute =
  AuthenticatedDailyLessonsLessonIdImport.update({
    path: '/daily-lessons/$lessonId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/questions': {
      id: '/_authenticated/questions'
      path: '/questions'
      fullPath: '/questions'
      preLoaderRoute: typeof AuthenticatedQuestionsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authentication/forget-password': {
      id: '/_authentication/forget-password'
      path: '/forget-password'
      fullPath: '/forget-password'
      preLoaderRoute: typeof AuthenticationForgetPasswordImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/log-in': {
      id: '/_authentication/log-in'
      path: '/log-in'
      fullPath: '/log-in'
      preLoaderRoute: typeof AuthenticationLogInImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/daily-lessons/$lessonId': {
      id: '/_authenticated/daily-lessons/$lessonId'
      path: '/daily-lessons/$lessonId'
      fullPath: '/daily-lessons/$lessonId'
      preLoaderRoute: typeof AuthenticatedDailyLessonsLessonIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/daily-lessons/': {
      id: '/_authenticated/daily-lessons/'
      path: '/daily-lessons'
      fullPath: '/daily-lessons'
      preLoaderRoute: typeof AuthenticatedDailyLessonsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedQuestionsRoute: typeof AuthenticatedQuestionsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedDailyLessonsLessonIdRoute: typeof AuthenticatedDailyLessonsLessonIdRoute
  AuthenticatedDailyLessonsIndexRoute: typeof AuthenticatedDailyLessonsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedQuestionsRoute: AuthenticatedQuestionsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedDailyLessonsLessonIdRoute:
    AuthenticatedDailyLessonsLessonIdRoute,
  AuthenticatedDailyLessonsIndexRoute: AuthenticatedDailyLessonsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface AuthenticationRouteChildren {
  AuthenticationForgetPasswordRoute: typeof AuthenticationForgetPasswordRoute
  AuthenticationLogInRoute: typeof AuthenticationLogInRoute
}

const AuthenticationRouteChildren: AuthenticationRouteChildren = {
  AuthenticationForgetPasswordRoute: AuthenticationForgetPasswordRoute,
  AuthenticationLogInRoute: AuthenticationLogInRoute,
}

const AuthenticationRouteWithChildren = AuthenticationRoute._addFileChildren(
  AuthenticationRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticationRouteWithChildren
  '/questions': typeof AuthenticatedQuestionsRoute
  '/forget-password': typeof AuthenticationForgetPasswordRoute
  '/log-in': typeof AuthenticationLogInRoute
  '/': typeof AuthenticatedIndexRoute
  '/daily-lessons/$lessonId': typeof AuthenticatedDailyLessonsLessonIdRoute
  '/daily-lessons': typeof AuthenticatedDailyLessonsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticationRouteWithChildren
  '/questions': typeof AuthenticatedQuestionsRoute
  '/forget-password': typeof AuthenticationForgetPasswordRoute
  '/log-in': typeof AuthenticationLogInRoute
  '/': typeof AuthenticatedIndexRoute
  '/daily-lessons/$lessonId': typeof AuthenticatedDailyLessonsLessonIdRoute
  '/daily-lessons': typeof AuthenticatedDailyLessonsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authentication': typeof AuthenticationRouteWithChildren
  '/_authenticated/questions': typeof AuthenticatedQuestionsRoute
  '/_authentication/forget-password': typeof AuthenticationForgetPasswordRoute
  '/_authentication/log-in': typeof AuthenticationLogInRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/daily-lessons/$lessonId': typeof AuthenticatedDailyLessonsLessonIdRoute
  '/_authenticated/daily-lessons/': typeof AuthenticatedDailyLessonsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/questions'
    | '/forget-password'
    | '/log-in'
    | '/'
    | '/daily-lessons/$lessonId'
    | '/daily-lessons'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/questions'
    | '/forget-password'
    | '/log-in'
    | '/'
    | '/daily-lessons/$lessonId'
    | '/daily-lessons'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authentication'
    | '/_authenticated/questions'
    | '/_authentication/forget-password'
    | '/_authentication/log-in'
    | '/_authenticated/'
    | '/_authenticated/daily-lessons/$lessonId'
    | '/_authenticated/daily-lessons/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthenticationRoute: typeof AuthenticationRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthenticationRoute: AuthenticationRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_authentication"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/questions",
        "/_authenticated/",
        "/_authenticated/daily-lessons/$lessonId",
        "/_authenticated/daily-lessons/"
      ]
    },
    "/_authentication": {
      "filePath": "_authentication.tsx",
      "children": [
        "/_authentication/forget-password",
        "/_authentication/log-in"
      ]
    },
    "/_authenticated/questions": {
      "filePath": "_authenticated/questions.tsx",
      "parent": "/_authenticated"
    },
    "/_authentication/forget-password": {
      "filePath": "_authentication/forget-password.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/log-in": {
      "filePath": "_authentication/log-in.tsx",
      "parent": "/_authentication"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/daily-lessons/$lessonId": {
      "filePath": "_authenticated/daily-lessons/$lessonId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/daily-lessons/": {
      "filePath": "_authenticated/daily-lessons/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
